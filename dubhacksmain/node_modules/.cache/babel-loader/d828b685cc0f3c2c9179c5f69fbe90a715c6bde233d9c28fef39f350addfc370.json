{"ast":null,"code":"var _jsxFileName = \"/Users/irisxu/Documents/DubHacks2025/dubhacksmain/src/components/InterviewRecorder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Play, Square, Clock } from 'lucide-react';\nimport { analyzeTranscriptWithGemini } from '../services/voiceAnalysisService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUESTIONS = [\"Tell me about yourself and your background.\", \"What are your greatest strengths?\", \"Describe a challenging situation you've faced and how you handled it.\", \"Where do you see yourself in 5 years?\", \"Why do you want to work for our company?\"];\nexport default function InterviewRecorder({\n  onStop\n}) {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isThinking, setIsThinking] = useState(false);\n  const [thinkingTime, setThinkingTime] = useState(30);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [status, setStatus] = useState('Click \"Ask Question\" to begin.');\n  const [transcript, setTranscript] = useState('');\n  const [recordings, setRecordings] = useState([]);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const streamRef = useRef(null);\n  const thinkingTimerRef = useRef(null);\n  const recordingTimerRef = useRef(null);\n  useEffect(() => {\n    // Setup microphone access\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      const mr = new MediaRecorder(stream);\n      mr.ondataavailable = e => chunksRef.current.push(e.data);\n      mr.onstop = async () => {\n        const blob = new Blob(chunksRef.current, {\n          type: 'audio/webm'\n        });\n        chunksRef.current = [];\n\n        // Transcribe the audio\n        setStatus('Transcribing your answer...');\n        try {\n          var _transcription$text;\n          const transcription = await elevenTranscribeBlob(blob);\n          const answerText = typeof transcription === 'string' ? transcription : (_transcription$text = transcription === null || transcription === void 0 ? void 0 : transcription.text) !== null && _transcription$text !== void 0 ? _transcription$text : '';\n\n          // Store the answer for this question\n          setTranscript(prev => prev + `\\nQ${currentQuestion + 1}: ${QUESTIONS[currentQuestion]}\\nA${currentQuestion + 1}: ${answerText}\\n`);\n        } catch (error) {\n          console.error('Transcription failed:', error);\n          setTranscript(prev => prev + `\\nQ${currentQuestion + 1}: ${QUESTIONS[currentQuestion]}\\nA${currentQuestion + 1}: [Transcription failed]\\n`);\n        }\n      };\n      mediaRecorderRef.current = mr;\n    }).catch(() => setStatus('Microphone permission denied.'));\n  }, []);\n  const askQuestion = async () => {\n    if (currentQuestion >= QUESTIONS.length) return;\n    const question = QUESTIONS[currentQuestion];\n    setStatus('Interviewer is asking the question...');\n    try {\n      await elevenTTSAskQuestion(question);\n      startThinkingTimer();\n    } catch (error) {\n      console.error('Failed to play question:', error);\n      startThinkingTimer();\n    }\n  };\n  const startThinkingTimer = () => {\n    setIsThinking(true);\n    setThinkingTime(30);\n    setStatus('Think about your answer (30 seconds)...');\n    thinkingTimerRef.current = setInterval(() => {\n      setThinkingTime(prev => {\n        if (prev <= 1) {\n          clearInterval(thinkingTimerRef.current);\n          setIsThinking(false);\n          startRecording();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const startRecording = () => {\n    if (!mediaRecorderRef.current) return;\n    setIsRecording(true);\n    setRecordingTime(0);\n    setStatus('Recording your answer...');\n    chunksRef.current = [];\n    mediaRecorderRef.current.start();\n\n    // Start recording timer\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  };\n  const stopRecording = async () => {\n    if (!mediaRecorderRef.current || !isRecording) return;\n    setIsRecording(false);\n    setStatus('Processing your answer...');\n\n    // Stop recording timer\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n    }\n    mediaRecorderRef.current.stop();\n\n    // Wait a moment for transcription to complete\n    setTimeout(() => {\n      if (currentQuestion < QUESTIONS.length - 1) {\n        setCurrentQuestion(prev => prev + 1);\n        setStatus('Click \"Ask Question\" for the next question.');\n      } else {\n        // All questions completed, analyze with Gemini\n        setStatus('Analyzing your interview...');\n        analyzeInterview();\n      }\n    }, 2000);\n  };\n  const analyzeInterview = async () => {\n    try {\n      const analysis = await analyzeTranscriptWithGemini(transcript, {\n        company: 'Interview Practice',\n        questionCount: QUESTIONS.length\n      });\n      onStop({\n        transcript,\n        recordings,\n        ...analysis,\n        createdAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Analysis failed:', error);\n      onStop({\n        transcript,\n        recordings,\n        summary: 'Analysis failed',\n        metrics: {\n          fillerWords: 0,\n          speakingRateWpm: 0\n        },\n        strengths: [],\n        improvements: ['Try again'],\n        decision: {\n          pass: false,\n          rationale: 'Analysis failed'\n        }\n      });\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-2xl shadow p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold\",\n        children: \"Interview Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500\",\n        children: [\"Question \", currentQuestion + 1, \" of \", QUESTIONS.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), currentQuestion < QUESTIONS.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 rounded-xl p-4 border border-blue-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-blue-800 mb-2\",\n        children: \"Current Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-700\",\n        children: QUESTIONS[currentQuestion]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-50 rounded-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-700\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), (isThinking || isRecording) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex items-center gap-2 bg-yellow-100 text-yellow-800 px-4 py-2 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: isThinking ? `Think: ${thinkingTime}s` : `Recording: ${formatTime(recordingTime)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-black rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true,\n        className: \"w-full h-64 object-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-4 left-4 flex items-center gap-2 bg-red-500 text-white px-3 py-1 rounded-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-2 h-2 bg-white rounded-full animate-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium\",\n          children: \"REC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3 justify-center\",\n      children: [!isThinking && !isRecording && currentQuestion < QUESTIONS.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-6 py-3 rounded-xl bg-indigo-600 text-white font-semibold hover:bg-indigo-700 transition-colors flex items-center gap-2\",\n        onClick: askQuestion,\n        children: [/*#__PURE__*/_jsxDEV(Play, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), \"Ask Question\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), isRecording && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-6 py-3 rounded-xl bg-red-600 text-white font-semibold hover:bg-red-700 transition-colors flex items-center gap-2\",\n        onClick: stopRecording,\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), \"Stop Recording\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-200 rounded-full h-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-indigo-600 h-2 rounded-full transition-all duration-300\",\n        style: {\n          width: `${(currentQuestion + (isRecording ? 1 : 0)) / QUESTIONS.length * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(InterviewRecorder, \"QIMu4udLQhvwI5vq+cDXPghp1QE=\");\n_c = InterviewRecorder;\nvar _c;\n$RefreshReg$(_c, \"InterviewRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Play","Square","Clock","analyzeTranscriptWithGemini","jsxDEV","_jsxDEV","QUESTIONS","InterviewRecorder","onStop","_s","currentQuestion","setCurrentQuestion","isRecording","setIsRecording","isThinking","setIsThinking","thinkingTime","setThinkingTime","recordingTime","setRecordingTime","status","setStatus","transcript","setTranscript","recordings","setRecordings","videoRef","mediaRecorderRef","chunksRef","streamRef","thinkingTimerRef","recordingTimerRef","navigator","mediaDevices","getUserMedia","audio","then","stream","current","mr","MediaRecorder","ondataavailable","e","push","data","onstop","blob","Blob","type","_transcription$text","transcription","elevenTranscribeBlob","answerText","text","prev","error","console","catch","askQuestion","length","question","elevenTTSAskQuestion","startThinkingTimer","setInterval","clearInterval","startRecording","start","stopRecording","stop","setTimeout","analyzeInterview","analysis","company","questionCount","createdAt","Date","toISOString","summary","metrics","fillerWords","speakingRateWpm","strengths","improvements","decision","pass","rationale","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","onClick","style","width","_c","$RefreshReg$"],"sources":["/Users/irisxu/Documents/DubHacks2025/dubhacksmain/src/components/InterviewRecorder.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Play, Square, Mic, Video, Clock } from 'lucide-react';\nimport { elevenLabsService } from '../services/elevenLabsService';\nimport { analyzeTranscriptWithGemini } from '../services/voiceAnalysisService';\n\ninterface InterviewRecorderProps {\n  onStop: (results: any) => void;\n}\n\nconst QUESTIONS = [\n  \"Tell me about yourself and your background.\",\n  \"What are your greatest strengths?\",\n  \"Describe a challenging situation you've faced and how you handled it.\",\n  \"Where do you see yourself in 5 years?\",\n  \"Why do you want to work for our company?\"\n];\n\nexport default function InterviewRecorder({ onStop }: InterviewRecorderProps) {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isThinking, setIsThinking] = useState(false);\n  const [thinkingTime, setThinkingTime] = useState(30);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [status, setStatus] = useState('Click \"Ask Question\" to begin.');\n  const [transcript, setTranscript] = useState<string>('');\n  const [recordings, setRecordings] = useState<any[]>([]);\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const chunksRef = useRef<BlobPart[]>([]);\n  const streamRef = useRef<MediaStream | null>(null);\n  const thinkingTimerRef = useRef<NodeJS.Timeout | null>(null);\n  const recordingTimerRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    // Setup microphone access\n    navigator.mediaDevices.getUserMedia({ audio: true })\n      .then((stream) => {\n        streamRef.current = stream;\n        const mr = new MediaRecorder(stream);\n        mr.ondataavailable = (e) => chunksRef.current.push(e.data);\n        mr.onstop = async () => {\n          const blob = new Blob(chunksRef.current, { type: 'audio/webm' });\n          chunksRef.current = [];\n          \n          // Transcribe the audio\n          setStatus('Transcribing your answer...');\n          try {\n            const transcription = await elevenTranscribeBlob(blob);\n            const answerText = typeof transcription === 'string' ? transcription : (transcription?.text ?? '');\n            \n            // Store the answer for this question\n            setTranscript(prev => prev + `\\nQ${currentQuestion + 1}: ${QUESTIONS[currentQuestion]}\\nA${currentQuestion + 1}: ${answerText}\\n`);\n          } catch (error) {\n            console.error('Transcription failed:', error);\n            setTranscript(prev => prev + `\\nQ${currentQuestion + 1}: ${QUESTIONS[currentQuestion]}\\nA${currentQuestion + 1}: [Transcription failed]\\n`);\n          }\n        };\n        mediaRecorderRef.current = mr;\n      })\n      .catch(() => setStatus('Microphone permission denied.'));\n  }, []);\n\n  const askQuestion = async () => {\n    if (currentQuestion >= QUESTIONS.length) return;\n    \n    const question = QUESTIONS[currentQuestion];\n    setStatus('Interviewer is asking the question...');\n    \n    try {\n      await elevenTTSAskQuestion(question);\n      startThinkingTimer();\n    } catch (error) {\n      console.error('Failed to play question:', error);\n      startThinkingTimer();\n    }\n  };\n\n  const startThinkingTimer = () => {\n    setIsThinking(true);\n    setThinkingTime(30);\n    setStatus('Think about your answer (30 seconds)...');\n    \n    thinkingTimerRef.current = setInterval(() => {\n      setThinkingTime(prev => {\n        if (prev <= 1) {\n          clearInterval(thinkingTimerRef.current!);\n          setIsThinking(false);\n          startRecording();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n\n  const startRecording = () => {\n    if (!mediaRecorderRef.current) return;\n    \n    setIsRecording(true);\n    setRecordingTime(0);\n    setStatus('Recording your answer...');\n    chunksRef.current = [];\n    \n    mediaRecorderRef.current.start();\n    \n    // Start recording timer\n    recordingTimerRef.current = setInterval(() => {\n      setRecordingTime(prev => prev + 1);\n    }, 1000);\n  };\n\n  const stopRecording = async () => {\n    if (!mediaRecorderRef.current || !isRecording) return;\n    \n    setIsRecording(false);\n    setStatus('Processing your answer...');\n    \n    // Stop recording timer\n    if (recordingTimerRef.current) {\n      clearInterval(recordingTimerRef.current);\n    }\n    \n    mediaRecorderRef.current.stop();\n    \n    // Wait a moment for transcription to complete\n    setTimeout(() => {\n      if (currentQuestion < QUESTIONS.length - 1) {\n        setCurrentQuestion(prev => prev + 1);\n        setStatus('Click \"Ask Question\" for the next question.');\n      } else {\n        // All questions completed, analyze with Gemini\n        setStatus('Analyzing your interview...');\n        analyzeInterview();\n      }\n    }, 2000);\n  };\n\n  const analyzeInterview = async () => {\n    try {\n      const analysis = await analyzeTranscriptWithGemini(transcript, {\n        company: 'Interview Practice',\n        questionCount: QUESTIONS.length\n      });\n\n      onStop({\n        transcript,\n        recordings,\n        ...analysis,\n        createdAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Analysis failed:', error);\n      onStop({\n        transcript,\n        recordings,\n        summary: 'Analysis failed',\n        metrics: { fillerWords: 0, speakingRateWpm: 0 },\n        strengths: [],\n        improvements: ['Try again'],\n        decision: { pass: false, rationale: 'Analysis failed' }\n      });\n    }\n  };\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-xl font-semibold\">Interview Practice</h2>\n        <div className=\"text-sm text-gray-500\">\n          Question {currentQuestion + 1} of {QUESTIONS.length}\n        </div>\n      </div>\n\n      {/* Current Question Display */}\n      {currentQuestion < QUESTIONS.length && (\n        <div className=\"bg-blue-50 rounded-xl p-4 border border-blue-200\">\n          <h3 className=\"font-semibold text-blue-800 mb-2\">Current Question:</h3>\n          <p className=\"text-blue-700\">{QUESTIONS[currentQuestion]}</p>\n        </div>\n      )}\n\n      {/* Status Display */}\n      <div className=\"p-4 bg-gray-50 rounded-xl\">\n        <p className=\"text-sm text-gray-700\">{status}</p>\n      </div>\n\n      {/* Timer Display */}\n      {(isThinking || isRecording) && (\n        <div className=\"text-center\">\n          <div className=\"inline-flex items-center gap-2 bg-yellow-100 text-yellow-800 px-4 py-2 rounded-lg\">\n            <Clock className=\"w-4 h-4\" />\n            <span className=\"font-semibold\">\n              {isThinking ? `Think: ${thinkingTime}s` : `Recording: ${formatTime(recordingTime)}`}\n            </span>\n          </div>\n        </div>\n      )}\n\n      {/* Video Display */}\n      <div className=\"relative bg-black rounded-lg overflow-hidden\">\n        <video\n          ref={videoRef}\n          autoPlay\n          muted\n          className=\"w-full h-64 object-cover\"\n        />\n        {isRecording && (\n          <div className=\"absolute top-4 left-4 flex items-center gap-2 bg-red-500 text-white px-3 py-1 rounded-full\">\n            <div className=\"w-2 h-2 bg-white rounded-full animate-pulse\"></div>\n            <span className=\"text-sm font-medium\">REC</span>\n          </div>\n        )}\n      </div>\n\n      {/* Control Buttons */}\n      <div className=\"flex gap-3 justify-center\">\n        {!isThinking && !isRecording && currentQuestion < QUESTIONS.length && (\n          <button\n            className=\"px-6 py-3 rounded-xl bg-indigo-600 text-white font-semibold hover:bg-indigo-700 transition-colors flex items-center gap-2\"\n            onClick={askQuestion}\n          >\n            <Play className=\"w-5 h-5\" />\n            Ask Question\n          </button>\n        )}\n        \n        {isRecording && (\n          <button\n            className=\"px-6 py-3 rounded-xl bg-red-600 text-white font-semibold hover:bg-red-700 transition-colors flex items-center gap-2\"\n            onClick={stopRecording}\n          >\n            <Square className=\"w-5 h-5\" />\n            Stop Recording\n          </button>\n        )}\n      </div>\n\n      {/* Progress Indicator */}\n      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n        <div \n          className=\"bg-indigo-600 h-2 rounded-full transition-all duration-300\"\n          style={{ width: `${((currentQuestion + (isRecording ? 1 : 0)) / QUESTIONS.length) * 100}%` }}\n        ></div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}