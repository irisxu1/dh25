import * as ElevenLabs from "../index";
/**
 * Right operand of the binary operator.
 */
export type AstGreaterThanOperatorNodeInputRight = ElevenLabs.AstGreaterThanOperatorNodeInputRight.AndOperator | ElevenLabs.AstGreaterThanOperatorNodeInputRight.BooleanLiteral | ElevenLabs.AstGreaterThanOperatorNodeInputRight.DynamicVariable | ElevenLabs.AstGreaterThanOperatorNodeInputRight.EqOperator | ElevenLabs.AstGreaterThanOperatorNodeInputRight.GtOperator | ElevenLabs.AstGreaterThanOperatorNodeInputRight.GteOperator | ElevenLabs.AstGreaterThanOperatorNodeInputRight.Llm | ElevenLabs.AstGreaterThanOperatorNodeInputRight.LtOperator | ElevenLabs.AstGreaterThanOperatorNodeInputRight.LteOperator | ElevenLabs.AstGreaterThanOperatorNodeInputRight.NeqOperator | ElevenLabs.AstGreaterThanOperatorNodeInputRight.NumberLiteral | ElevenLabs.AstGreaterThanOperatorNodeInputRight.OrOperator | ElevenLabs.AstGreaterThanOperatorNodeInputRight.StringLiteral;
export declare namespace AstGreaterThanOperatorNodeInputRight {
    interface AndOperator extends ElevenLabs.AstAndOperatorNodeInput {
        type: "and_operator";
    }
    interface BooleanLiteral extends ElevenLabs.AstBooleanNodeInput {
        type: "boolean_literal";
    }
    interface DynamicVariable extends ElevenLabs.AstDynamicVariableNodeInput {
        type: "dynamic_variable";
    }
    interface EqOperator extends ElevenLabs.AstEqualsOperatorNodeInput {
        type: "eq_operator";
    }
    interface GtOperator extends ElevenLabs.AstGreaterThanOperatorNodeInput {
        type: "gt_operator";
    }
    interface GteOperator extends ElevenLabs.AstGreaterThanOrEqualsOperatorNodeInput {
        type: "gte_operator";
    }
    interface Llm extends ElevenLabs.AstllmNodeInput {
        type: "llm";
    }
    interface LtOperator extends ElevenLabs.AstLessThanOperatorNodeInput {
        type: "lt_operator";
    }
    interface LteOperator extends ElevenLabs.AstLessThanOrEqualsOperatorNodeInput {
        type: "lte_operator";
    }
    interface NeqOperator extends ElevenLabs.AstNotEqualsOperatorNodeInput {
        type: "neq_operator";
    }
    interface NumberLiteral extends ElevenLabs.AstNumberNodeInput {
        type: "number_literal";
    }
    interface OrOperator extends ElevenLabs.AstOrOperatorNodeInput {
        type: "or_operator";
    }
    interface StringLiteral extends ElevenLabs.AstStringNodeInput {
        type: "string_literal";
    }
}
