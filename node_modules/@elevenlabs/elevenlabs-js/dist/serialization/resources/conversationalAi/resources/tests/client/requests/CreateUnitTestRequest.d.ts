import * as serializers from "../../../../../../index";
import * as ElevenLabs from "../../../../../../../api/index";
import * as core from "../../../../../../../core";
import { ConversationHistoryTranscriptCommonModelInput } from "../../../../../../types/ConversationHistoryTranscriptCommonModelInput";
import { AgentSuccessfulResponseExample } from "../../../../../../types/AgentSuccessfulResponseExample";
import { AgentFailureResponseExample } from "../../../../../../types/AgentFailureResponseExample";
import { UnitTestToolCallEvaluationModelInput } from "../../../../../../types/UnitTestToolCallEvaluationModelInput";
import { CreateUnitTestRequestDynamicVariablesValue } from "../../types/CreateUnitTestRequestDynamicVariablesValue";
import { UnitTestCommonModelType } from "../../../../../../types/UnitTestCommonModelType";
import { TestFromConversationMetadataInput } from "../../../../../../types/TestFromConversationMetadataInput";
export declare const CreateUnitTestRequest: core.serialization.Schema<serializers.conversationalAi.CreateUnitTestRequest.Raw, ElevenLabs.conversationalAi.CreateUnitTestRequest>;
export declare namespace CreateUnitTestRequest {
    interface Raw {
        chat_history: ConversationHistoryTranscriptCommonModelInput.Raw[];
        success_condition: string;
        success_examples: AgentSuccessfulResponseExample.Raw[];
        failure_examples: AgentFailureResponseExample.Raw[];
        tool_call_parameters?: UnitTestToolCallEvaluationModelInput.Raw | null;
        dynamic_variables?: Record<string, CreateUnitTestRequestDynamicVariablesValue.Raw | null | undefined> | null;
        type?: UnitTestCommonModelType.Raw | null;
        from_conversation_metadata?: TestFromConversationMetadataInput.Raw | null;
        name: string;
    }
}
